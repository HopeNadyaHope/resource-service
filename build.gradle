plugins {
    id "org.springframework.boot" version "${spring_boot_version}"
    id "io.spring.dependency-management" version "${spring_dependency_managment_version}"
    id "java"
}

apply plugin: "io.spring.dependency-management"

group "com.epam.microservices"
version "1.0"

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-amqp"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:${eureka_version}"
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign:${eureka_version}"
    implementation "io.github.resilience4j:resilience4j-spring-boot2:${resilience4_version}"
    implementation "org.springframework.retry:spring-retry:${spring_retry_version}"
    implementation "org.springframework:spring-aspects:${spring_aspects_version}"
    implementation "javax.persistence:javax.persistence-api:${persistence_api_version}"
    implementation "mysql:mysql-connector-java:${mysql_connector_version}"
    implementation "com.amazonaws:aws-java-sdk:${aws_java_sdk_version}"
    implementation "commons-fileupload:commons-fileupload:${commons_fileupload_version}"
    implementation "commons-io:commons-io:${commons_io_version}"
    implementation "net.logstash.logback:logstash-logback-encoder:${logstash_version}"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junit_version}"
    testCompileOnly "org.junit.jupiter:junit-jupiter-params:${junit_version}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit_version}"
    testImplementation "org.mockito:mockito-core:${mockito_version}"
    testImplementation "com.h2database:h2:${h2_version}"
    testImplementation("org.flywaydb:flyway-core:${flyway_version}") {
        exclude group: 'org.slf4j'
    }
}

test {
    useJUnitPlatform()
}